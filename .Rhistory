{
lmer(substitute(i ~ scale(Freq_occurrence_wild_boar) +
scale(1|Cover_herb) +
scale(1|Cover_litter) +
scale(1|Height_herbs),
list(i = as.name(x))),
data = fauna_na_omit)
})
# computes AIC values of Gaussian GLMMs fauna - predictor = wild boar frequency
AIC.gaussian.fauna.frequency <- lapply(models.gaussian.fauna.freq, function(x)
{
AIC(x)
})
# select responses showing proportion data
dvList.binomial.fauna <- names(fauna_na_omit)[5:6]
# compute neg- binomial GLMMs with "total traces" as predictor
models.binomial.fauna.rooting <- lapply(dvList.binomial.fauna, function(x)
{
glmer.nb(substitute(i ~ scale(Total_rooting)+
scale(1|Cover_herb) +
scale(1|Cover_litter) +
scale(1|Height_herbs),
list(i = as.name(x))),
data = fauna_na_omit)
})
# computes AIC values of binomial GLMMs fauna - predictor = rooting
AIC.binomial.fauna.rooting <- lapply(models.binomial.fauna.rooting, function(x)
{
AIC(x)
})
# compute GLMMs with "wild boar frequency" as predictor
models.binomial.fauna.freq <- lapply(dvList.binomial.fauna, function(x)
{
glmer.nb(substitute(i ~ scale(Freq_occurrence_wild_boar)+
scale(1|Cover_herb) +
scale(1|Cover_litter) +
scale(1|Height_herbs),
list(i = as.name(x))),
data = fauna_na_omit)
})
# summary neg- binomial GLMMs fauna - predictor = wild boar frequency
AIC.binomial.fauna.frequency <- lapply(models.binomial.fauna.freq, function(x)
{
AIC(x)
})
# select responses showing count data
dvList.poisson.fauna <- names(fauna_na_omit)[7]
# compute neg- binomial GLMMs with "total traces" as predictor
models.poisson.fauna.rooting <- lapply(dvList.poisson.fauna, function(x)
{
glmer(substitute(i ~ scale(Total_rooting)+
scale(1|Cover_herb) +
scale(1|Cover_litter) +
scale(1|Height_herbs),
list(i = as.name(x))),
family="poisson",
data = fauna_na_omit)
})
# computes AIC values of binomial GLMMs fauna - predictor = rooting
AIC.poisson.fauna.rooting <- lapply(models.poisson.fauna.rooting, function(x)
{
AIC(x)
})
# compute GLMMs with "wild boar frequency" as predictor
models.poisson.fauna.freq <- lapply(dvList.poisson.fauna, function(x)
{
glmer.nb(substitute(i ~ scale(Freq_occurrence_wild_boar)+
scale(1|Cover_herb) +
scale(1|Cover_litter) +
scale(1|Height_herbs),
list(i = as.name(x))),
data = fauna_na_omit)
})
# summary neg- binomial GLMMs fauna - predictor = wild boar frequency
AIC.poisson.fauna.frequency <- lapply(models.poisson.fauna.freq, function(x)
{
AIC(x)
})
# Fill AIC comparison data frame
AIC_comparison_gaussian = as.data.frame(dvList.gaussian.fauna)
names(AIC_comparison_gaussian)[1] <- "Response_fauna"
AIC_comparison_gaussian$AIC_freq = AIC.gaussian.fauna.frequency
AIC_comparison_gaussian$AIC_rooting = AIC.gaussian.fauna.rooting
AIC_comparison_binomial = as.data.frame(dvList.binomial.fauna)
names(AIC_comparison_binomial)[1] <- "Response_fauna"
AIC_comparison_binomial$AIC_freq = AIC.binomial.fauna.frequency
AIC_comparison_binomial$AIC_rooting = AIC.binomial.fauna.rooting
AIC_comparison_poisson = as.data.frame(dvList.poisson.fauna)
names(AIC_comparison_poisson)[1] <- "Response_fauna"
AIC_comparison_poisson$AIC_freq = AIC.poisson.fauna.frequency
AIC_comparison_poisson$AIC_rooting = AIC.poisson.fauna.rooting
AIC_comparison <- rbind(AIC_comparison_gaussian, AIC_comparison_binomial, AIC_comparison_poisson)
AIC_comparison <- apply(AIC_comparison,2,as.character)
write.csv(AIC_comparison, "./exports/AIC_comparison_fauna.csv")
detach(fauna_na_omit)
View(vegetation)
attach(vegetation)
#### computes GLMMs (Family Gaussian) to vegetation richness and diversity indices
models.gaussian.veg <- lapply(dvList.gaussian.veg, function(x)
{
lmer(substitute(i ~ scale(Fresh_rooting) +
scale(Old_rooting) +
scale(1|Cover_herb) +
scale(1|Cover_litter) +
scale(1|Height_herbs),
list(i = as.name(x))),
data = vegetation)
})
R2_models.gaussian.veg <- data.frame(rsq(models.gaussian.veg[[1]]),
rsq(models.gaussian.veg[[2]]),
rsq(models.gaussian.veg[[3]]),
rsq(models.gaussian.veg[[4]]),
rsq(models.gaussian.veg[[5]]))
View(R2_models.gaussian.veg)
remove(R2_models.gaussian.veg)
R2_models.gaussian.veg <- c(rsq(models.gaussian.veg[[1]]),
rsq(models.gaussian.veg[[2]]),
rsq(models.gaussian.veg[[3]]),
rsq(models.gaussian.veg[[4]]),
rsq(models.gaussian.veg[[5]]))
R2_models.gaussian.veg <- as.data.frame(R2_models.gaussian.veg)
R2_models.gaussian.veg <- c(rsq(models.gaussian.veg[[1]]),
rsq(models.gaussian.veg[[2]]),
rsq(models.gaussian.veg[[3]]),
rsq(models.gaussian.veg[[4]]),
rsq(models.gaussian.veg[[5]]))
R2_models.gaussian.veg <- data.frame(R2_models.gaussian.veg)
R2_models.gaussian.veg <- c(rsq(models.gaussian.veg[[1]]),
rsq(models.gaussian.veg[[2]]),
rsq(models.gaussian.veg[[3]]),
rsq(models.gaussian.veg[[4]]),
rsq(models.gaussian.veg[[5]]))
View(R2_models.gaussian.veg)
rsq(models.gaussian.veg[[1]]
)
summary(models.gaussian[[1]])
summary(models.gaussian.veg[[1]])
summary(models.gaussian.veg[[2]])
summary(models.gaussian.veg[[1]])
detach(vegetation)
d <- read.csv("Data/Analyses_GLMMs_Vegetation.csv", header = TRUE, sep =",", row.names = 1)
attach(d)
d <- read.csv("./data/Analyses_GLMMs_Vegetation.csv", header = TRUE, sep =",", row.names = 1)
attach(d)
detach(d)
detach(vegetation)
detach(fauna)
detach(vegetation_na_omit)
detach(fauna_na_omit)
d <- read.csv("./data/Analyses_GLMMs_Vegetation.csv", header = TRUE, sep =",", row.names = 1)
attach(d)
dvList.gaussian <- names(d)[c(1:4, 6)]
models.gaussian <- lapply(dvList.gaussian, function(x)
{
lmer(substitute(i ~ scale(Average_New_Traces) +
scale(Average_Old_Traces) +
scale(1|Cover_herb) +
scale(1|Cover_litter) +
scale(1|Max_height_herbs),
list(i = as.name(x))),
data = d)
})
summary(models.gaussian[[1]])
detach(d)
remove(d)
summary.models.gaussian.veg <- lapply(models.gaussian.veg, function(x)
{
summary(x)
})
View(summary.models.gaussian.veg)
R2_models.gaussian.veg <- lapply(models.gaussian.veg, function(x)
{
rsq(x)
})
View(R2_models.gaussian.veg)
View(summary.models.gaussian.veg)
summary.models.gaussian.veg[[5]][["coefficients"]]
data.frame(summary.models.gaussian.veg[[5]][["coefficients"]])
test <- data.frame(summary.models.gaussian.veg[[5]][["coefficients"]])
View(test)
test <- t(data.frame(summary.models.gaussian.veg[[5]][["coefficients"]]))
View(test)
test <- data.frame(t(summary.models.gaussian.veg[[5]][["coefficients"]]))
View(test)
for (i in 1:5) {
d <- data.frame(t(summary.models.gaussian.veg[[i]][["coefficients"]]))
}
remove(d)
remove(d1)
remove(i)
d1 <- data.frame(t(summary.models.gaussian.veg[[1]][["coefficients"]]))
d2 <- data.frame(t(summary.models.gaussian.veg[[2]][["coefficients"]]))
d3 <- data.frame(t(summary.models.gaussian.veg[[3]][["coefficients"]]))
d4 <- data.frame(t(summary.models.gaussian.veg[[4]][["coefficients"]]))
d5 <- data.frame(t(summary.models.gaussian.veg[[5]][["coefficients"]]))
d <- cbind(d1,d2, d3,d4,d5)
View(d)
remove(d)
d <- rbind(d1,d2, d3,d4,d5)
View(d)
source("./utils/charge_packages.R")
# Load data
predictors <- read.csv("./data/predictors.csv")
vegetation <- read.csv("./data/vegetation.csv", header = TRUE, sep =";", row.names = 1)
fauna <- read.csv("./data/fauna.csv", header = TRUE, sep =";", row.names = 1)
# Define variables
# select responses = normal distribution
dvList.gaussian.veg <- names(vegetation)[c(1:5)]
dvList.gaussian.fauna <- names(fauna_na_omit)[c(1:4)]
# select responses = proportion data
dvList.binomial.veg <- names(vegetation)[c(6:8)]
dvList.binomial.fauna <- names(fauna_na_omit)[5:6]
# select responses = count data
dvList.poisson.fauna <- names(fauna_na_omit)[7]
View(fauna)
dvList.gaussian.veg <- names(vegetation)[c(1:5)]
dvList.gaussian.fauna <- names(fauna)[c(1:4)]
# select responses = proportion data
dvList.binomial.veg <- names(vegetation)[c(6:8)]
dvList.binomial.fauna <- names(fauna)[5:6]
# select responses = count data
dvList.poisson.fauna <- names(fauna)[7]
attach(fauna)
View(vegetation)
old_rooting <- vegetation$old_rooting/100
fresh_rooting <- vegetation$Fresh_rooting/100
pA <- ggplot(vegetation, aes_string(x =old_rooting , y =  d$Div_simpson)) +
# geom_ribbon(stat = "smooth", method = "glm", fill="azure2") +
# stat_smooth(method = "glm", se= FALSE, color="black", lwd= 1.2) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black")) + geom_point()
pA <- pA+labs(x="Proportion of old rooting", y= "Simpson Diversity Index")
pA <- ggplot(vegetation, aes_string(x =old_rooting , y =  vegetation$Div_simpson)) +
# geom_ribbon(stat = "smooth", method = "glm", fill="azure2") +
# stat_smooth(method = "glm", se= FALSE, color="black", lwd= 1.2) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black")) + geom_point()
pA <- pA+labs(x="Proportion of old rooting", y= "Simpson Diversity Index")
pA
old_rooting <- vegetation$Old_rooting/100
pA <- ggplot(vegetation, aes_string(x =old_rooting , y =  vegetation$Div_simpson)) +
# geom_ribbon(stat = "smooth", method = "glm", fill="azure2") +
# stat_smooth(method = "glm", se= FALSE, color="black", lwd= 1.2) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black")) + geom_point()
pA <- pA+labs(x="Proportion of old rooting", y= "Simpson Diversity Index")
pA
Figure.all <- multiplot(pA+ theme(plot.title = element_text(size=9)),
pC+ theme(plot.title = element_text(size=9)),
pE+ theme(plot.title = element_text(size=9)),
pG+ theme(plot.title = element_text(size=9)),
pB+ theme(plot.title = element_text(size=9)),
pD+ theme(plot.title = element_text(size=9)),
pF+ theme(plot.title = element_text(size=9)),
pH+ theme(plot.title = element_text(size=9)), cols=2)
pA <- ggplot(vegetation, aes_string(x =old_rooting , y =  vegetation$Div_simpson)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black")) + geom_point()
pA <- pA+labs(x="Proportion of old rooting", y= "Simpson Diversity Index")
pB <- ggplot(fauna, aes_string(x = old_rooting, y = fauna$Summed_Abundances_Lizard)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black")) + geom_point()
pB <- pB+labs(x="Proportion of old rooting", y= "Abundance sand lizard")
pC <- ggplot(fauna, aes_string(x = fresh_rooting, y = fauna$div_simson)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black")) + geom_point()
pC <- pC+labs(x="Proportion of fresh rooting", y= "Simpson Diversity Index")
pD <- ggplot(fauna, aes_string(x = fresh_rooting, y = fauna$sp_richness)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black")) + geom_point()
pD <- pD+labs(x="Proportion of fresh rooting", y= "Species richness")
pE <- ggplot(fauna, aes_string(x = old_rooting, y = fauna$div_simson)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black")) + geom_point()
pE <- pE+labs(x="Proportion of old rooting", y= "Simpson Diversity Index")
pF <- ggplot(fauna, aes_string(x = old_rooting, y = fauna$sp_richness)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black")) + geom_point()
pF <- pF+labs(x="Proportion of old rooting", y= "Species richness")
pG <- ggplot(fauna, aes_string(x = old_rooting, y = fauna$Tr_rasen_sp_richness)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black")) + geom_point()
pG <- pG+labs(x="Proportion of old rooting", y= "Number of dry grassland species")
pH <- ggplot(fauna, aes_string(x = old_rooting, y = fauna$Rl_sp_richness)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black")) + geom_point()
pH <- pH+labs(x="Proportion of old rooting", y= "Number of Red List species")
Figure.all <- multiplot(pA+ theme(plot.title = element_text(size=9)),
pC+ theme(plot.title = element_text(size=9)),
pE+ theme(plot.title = element_text(size=9)),
pG+ theme(plot.title = element_text(size=9)),
pB+ theme(plot.title = element_text(size=9)),
pD+ theme(plot.title = element_text(size=9)),
pF+ theme(plot.title = element_text(size=9)),
pH+ theme(plot.title = element_text(size=9)), cols=2)
pG <- ggplot(fauna, aes_string(x = old_rooting, y = fauna$Tr_rasen_sp_richness)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black")) + geom_point()
pG <- pG+labs(x="Proportion of old rooting", y= "Number of dry grassland specialists")
Figure.all <- multiplot(pA+ theme(plot.title = element_text(size=9)),
pC+ theme(plot.title = element_text(size=9)),
pE+ theme(plot.title = element_text(size=9)),
pG+ theme(plot.title = element_text(size=9)),
pB+ theme(plot.title = element_text(size=9)),
pD+ theme(plot.title = element_text(size=9)),
pF+ theme(plot.title = element_text(size=9)),
pH+ theme(plot.title = element_text(size=9)), cols=2)
pA <- ggplot(vegetation, aes_string(x =old_rooting , y =  vegetation$Div_simpson)) + ggtitle("vascular plants") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black")) + geom_point()
pA <- pA+labs(x="Proportion of old rooting", y= "Simpson Diversity Index")
Figure.all <- multiplot(pA+ theme(plot.title = element_text(size=9)),
pC+ theme(plot.title = element_text(size=9)),
pE+ theme(plot.title = element_text(size=9)),
pG+ theme(plot.title = element_text(size=9)),
pB+ theme(plot.title = element_text(size=9)),
pD+ theme(plot.title = element_text(size=9)),
pF+ theme(plot.title = element_text(size=9)),
pH+ theme(plot.title = element_text(size=9)), cols=2)
pA <- ggplot(vegetation, aes_string(x =old_rooting , y =  vegetation$Div_simpson)) + ggtitle("vascular plants") +
theme(plot.title = element_text(size=22), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black")) + geom_point()
pA <- pA+labs(x="Proportion of old rooting", y= "Simpson Diversity Index")
Figure.all <- multiplot(pA+ theme(plot.title = element_text(size=9)),
pC+ theme(plot.title = element_text(size=9)),
pE+ theme(plot.title = element_text(size=9)),
pG+ theme(plot.title = element_text(size=9)),
pB+ theme(plot.title = element_text(size=9)),
pD+ theme(plot.title = element_text(size=9)),
pF+ theme(plot.title = element_text(size=9)),
pH+ theme(plot.title = element_text(size=9)), cols=2)
pA <- ggplot(vegetation, aes_string(x =old_rooting , y =  vegetation$Div_simpson)) + ggtitle("vascular plants") +
theme(plot.title = element_text(size=40), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black")) + geom_point()
pA <- pA+labs(x="Proportion of old rooting", y= "Simpson Diversity Index")
Figure.all <- multiplot(pA+ theme(plot.title = element_text(size=9)),
pC+ theme(plot.title = element_text(size=9)),
pE+ theme(plot.title = element_text(size=9)),
pG+ theme(plot.title = element_text(size=9)),
pB+ theme(plot.title = element_text(size=9)),
pD+ theme(plot.title = element_text(size=9)),
pF+ theme(plot.title = element_text(size=9)),
pH+ theme(plot.title = element_text(size=9)), cols=2)
pA <- ggplot(vegetation, aes_string(x =old_rooting , y =  vegetation$Div_simpson)) + ggtitle("vascular plants") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black")) + geom_point() +  theme(plot.title = element_text(size = 40, face = "bold"))
pA <- pA+labs(x="Proportion of old rooting", y= "Simpson Diversity Index")
Figure.all <- multiplot(pA+ theme(plot.title = element_text(size=9)),
pC+ theme(plot.title = element_text(size=9)),
pE+ theme(plot.title = element_text(size=9)),
pG+ theme(plot.title = element_text(size=9)),
pB+ theme(plot.title = element_text(size=9)),
pD+ theme(plot.title = element_text(size=9)),
pF+ theme(plot.title = element_text(size=9)),
pH+ theme(plot.title = element_text(size=9)), cols=2)
pA <- ggplot(vegetation, aes_string(x =old_rooting , y =  vegetation$Div_simpson)) + ggtitle("vascular plants") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black")) + geom_point() +  theme(plot.title = element_text(face = "bold"))
pA <- pA+labs(x="Proportion of old rooting", y= "Simpson Diversity Index")
Figure.all <- multiplot(pA+ theme(plot.title = element_text(size=9)),
pC+ theme(plot.title = element_text(size=9)),
pE+ theme(plot.title = element_text(size=9)),
pG+ theme(plot.title = element_text(size=9)),
pB+ theme(plot.title = element_text(size=9)),
pD+ theme(plot.title = element_text(size=9)),
pF+ theme(plot.title = element_text(size=9)),
pH+ theme(plot.title = element_text(size=9)), cols=2)
pA <- ggplot(vegetation, aes_string(x =old_rooting , y =  vegetation$Div_simpson)) + ggtitle("Vascular plants") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black")) + geom_point() +  theme(plot.title = element_text(face = "bold"))
pA <- pA+labs(x="Proportion of old rooting", y= "Simpson Diversity Index")
pB <- ggplot(fauna, aes_string(x = old_rooting, y = fauna$Summed_Abundances_Lizard)) + ggtitle("Sand lizard") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black")) + geom_point() +  theme(plot.title = element_text(face = "bold"))
pB <- pB+labs(x="Proportion of old rooting", y= "Abundance sand lizard")
pC <- ggplot(fauna, aes_string(x = fresh_rooting, y = fauna$div_simson)) + ggtitle("Grasshoppers") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black")) + geom_point() +  theme(plot.title = element_text(face = "bold"))
pC <- pC+labs(x="Proportion of fresh rooting", y= "Simpson Diversity Index")
Figure.all <- multiplot(pA+ theme(plot.title = element_text(size=9)),
pC+ theme(plot.title = element_text(size=9)),
pE+ theme(plot.title = element_text(size=9)),
pG+ theme(plot.title = element_text(size=9)),
pB+ theme(plot.title = element_text(size=9)),
pD+ theme(plot.title = element_text(size=9)),
pF+ theme(plot.title = element_text(size=9)),
pH+ theme(plot.title = element_text(size=9)), cols=2)
pA <- ggplot(vegetation, aes_string(x =old_rooting , y =  vegetation$Div_simpson)) + ggtitle("Vascular plants // a)") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black")) + geom_point() +  theme(plot.title = element_text(face = "bold"))
pA <- pA+labs(x="Proportion of old rooting", y= "Simpson Diversity Index")
Figure.all <- multiplot(pA+ theme(plot.title = element_text(size=9)),
pC+ theme(plot.title = element_text(size=9)),
pE+ theme(plot.title = element_text(size=9)),
pG+ theme(plot.title = element_text(size=9)),
pB+ theme(plot.title = element_text(size=9)),
pD+ theme(plot.title = element_text(size=9)),
pF+ theme(plot.title = element_text(size=9)),
pH+ theme(plot.title = element_text(size=9)), cols=2)
pA <- ggplot(vegetation, aes_string(x =old_rooting , y =  vegetation$Div_simpson)) + ggtitle("Vascular plants \na)") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black")) + geom_point() +  theme(plot.title = element_text(face = "bold"))
pA <- pA+labs(x="Proportion of old rooting", y= "Simpson Diversity Index")
Figure.all <- multiplot(pA+ theme(plot.title = element_text(size=9)),
pC+ theme(plot.title = element_text(size=9)),
pE+ theme(plot.title = element_text(size=9)),
pG+ theme(plot.title = element_text(size=9)),
pB+ theme(plot.title = element_text(size=9)),
pD+ theme(plot.title = element_text(size=9)),
pF+ theme(plot.title = element_text(size=9)),
pH+ theme(plot.title = element_text(size=9)), cols=2)
pA <- ggplot(vegetation, aes_string(x =old_rooting , y =  vegetation$Div_simpson)) + ggtitle("Vascular plants \na)") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black")) + geom_point() +  theme(plot.title = element_text(face = "bold"))
pA <- pA+labs(x="Proportion of old rooting", y= "Simpson Diversity Index")
pB <- ggplot(fauna, aes_string(x = old_rooting, y = fauna$Summed_Abundances_Lizard)) + ggtitle("Sand lizard \nb)") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black")) + geom_point() +  theme(plot.title = element_text(face = "bold"))
pB <- pB+labs(x="Proportion of old rooting", y= "Abundance sand lizard")
pC <- ggplot(fauna, aes_string(x = fresh_rooting, y = fauna$div_simson)) + ggtitle("Grasshoppers \nc)") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black")) + geom_point() +  theme(plot.title = element_text(face = "bold"))
pC <- pC+labs(x="Proportion of fresh rooting", y= "Simpson Diversity Index")
pD <- ggplot(fauna, aes_string(x = fresh_rooting, y = fauna$sp_richness)) + ggtitle("Grasshoppers \nd)") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black")) + geom_point() +  theme(plot.title = element_text(face = "bold"))
pD <- pD+labs(x="Proportion of fresh rooting", y= "Species richness")
pE <- ggplot(fauna, aes_string(x = old_rooting, y = fauna$div_simson)) + ggtitle("e)") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black")) + geom_point() +  theme(plot.title = element_text(face = "bold"))
pE <- pE+labs(x="Proportion of old rooting", y= "Simpson Diversity Index")
pF <- ggplot(fauna, aes_string(x = old_rooting, y = fauna$sp_richness)) + ggtitle("f)") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black")) + geom_point() +  theme(plot.title = element_text(face = "bold"))
pF <- pF+labs(x="Proportion of old rooting", y= "Species richness")
pG <- ggplot(fauna, aes_string(x = old_rooting, y = fauna$Tr_rasen_sp_richness)) + ggtitle("g)") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black")) + geom_point() +  theme(plot.title = element_text(face = "bold"))
pG <- pG+labs(x="Proportion of old rooting", y= "Number of dry grassland specialists")
pH <- ggplot(fauna, aes_string(x = old_rooting, y = fauna$Rl_sp_richness)) + ggtitle("h)") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black")) + geom_point() +  theme(plot.title = element_text(face = "bold"))
pH <- pH+labs(x="Proportion of old rooting", y= "Number of Red List species")
Figure.all <- multiplot(pA+ theme(plot.title = element_text(size=9)),
pC+ theme(plot.title = element_text(size=9)),
pE+ theme(plot.title = element_text(size=9)),
pG+ theme(plot.title = element_text(size=9)),
pB+ theme(plot.title = element_text(size=9)),
pD+ theme(plot.title = element_text(size=9)),
pF+ theme(plot.title = element_text(size=9)),
pH+ theme(plot.title = element_text(size=9)), cols=2)
png("./exports/plots_GLMMs.png", width = 600, height = 800)
plot(Figure.all)
dev.off()
Figure.all
png("./exports/plots_GLMMs.png", width = 600, height = 800)
multiplot(pA+ theme(plot.title = element_text(size=9)),
pC+ theme(plot.title = element_text(size=9)),
pE+ theme(plot.title = element_text(size=9)),
pG+ theme(plot.title = element_text(size=9)),
pB+ theme(plot.title = element_text(size=9)),
pD+ theme(plot.title = element_text(size=9)),
pF+ theme(plot.title = element_text(size=9)),
pH+ theme(plot.title = element_text(size=9)), cols=2)
dev.off()
png("./exports/plots_GLMMs.png", width = 500, height = 800)
multiplot(pA+ theme(plot.title = element_text(size=9)),
pC+ theme(plot.title = element_text(size=9)),
pE+ theme(plot.title = element_text(size=9)),
pG+ theme(plot.title = element_text(size=9)),
pB+ theme(plot.title = element_text(size=9)),
pD+ theme(plot.title = element_text(size=9)),
pF+ theme(plot.title = element_text(size=9)),
pH+ theme(plot.title = element_text(size=9)), cols=2)
dev.off()
pD <- ggplot(fauna, aes_string(x = fresh_rooting, y = fauna$sp_richness)) + ggtitle("\nd)") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black")) + geom_point() +  theme(plot.title = element_text(face = "bold"))
pD <- pD+labs(x="Proportion of fresh rooting", y= "Species richness")
png("./exports/plots_GLMMs.png", width = 500, height = 800)
multiplot(pA+ theme(plot.title = element_text(size=9)),
pC+ theme(plot.title = element_text(size=9)),
pE+ theme(plot.title = element_text(size=9)),
pG+ theme(plot.title = element_text(size=9)),
pB+ theme(plot.title = element_text(size=9)),
pD+ theme(plot.title = element_text(size=9)),
pF+ theme(plot.title = element_text(size=9)),
pH+ theme(plot.title = element_text(size=9)), cols=2)
dev.off()
library ("vegan")
library("goeveg")
library("indicspecies")
library ("vegan")
library("goeveg")
library("indicspecies")
ab.plants <- read.csv("./data/abundance_vasc_plants.csv", header = TRUE, sep =",", row.names = 1)
View(predictors)
predictors <- read.csv("./data/predictors.csv", header = TRUE, sep =",", row.names = 1)
# Load data
predictors <- read.csv("./data/predictors.csv", header = TRUE, sep =";", row.names = 1)
View(predictors)
cor.pearson <- rcorr(as.matrix(predictors[,c(1:7)]), type = "pearson")
View(cor.pearson)
predictors <- read.csv("./data/predictors.csv", header = TRUE, sep =";", row.names = 1)
View(predictors)
ab.plants <- read.csv("./data/abundance_vasc_plants.csv", header = TRUE, sep =";", row.names = 1)
# log transform plant abundance data
ab.plants.log <- log1p (ab.plants)
group_old <- as.factor(predictors$Group_rooting_old)
nmds.veg <- metaMDS(ab.plants.log, distance = "bray", k = 2)
plot.nmds.veg <- ordiplot(nmds.veg, type = "none", choices = c(1,2))
colvec <- c("darkturquoise", "darkblue")
ordihull(nmds_,groups=group_old,draw="polygon",col= colvec, label=F)
ordihull(nmds.veg,groups=group_old,draw="polygon",col= colvec, label=F)
legend("topright", legend=levels(group_old), bty="n", col=colvec, pch=19)
# run PERMANOVA: model response of species assemblages to predictors.variables
adonis2(spe~ predictors$Old_rooting +
predictors$Fresh_rooting +
predictors$Cover_herb +
predictors$Cover_litter +
predictors$Height_herbs )
adonis2(ab.plants.log ~ predictors$Old_rooting +
predictors$Fresh_rooting +
predictors$Cover_herb +
predictors$Cover_litter +
predictors$Height_herbs )
ef <- predictorsfit(nmds_, predictors[, c(5,6)])
plot(ef, col="black", seg.lty = "dashed")
ef <- predictorsfit(nmds.veg, predictors[, c(5,6)])
plot(ef, col="black", seg.lty = "dashed")
ef <- envfit(nmds.veg, predictors[, c(5,6)])
plot(ef, col="black", seg.lty = "dashed")
ordi_logtrans <- rda(ab.plants.log ~ predictors$Old_rooting + Condition(predictors$Cover_herb, predictors$Cover_litter), data = predictors)
png("./exports/plot_NMDS_vegetation.png", width = 800, height = 600)
plot.nmds.veg
dev.off()
png("./exports/plot_NMDS_vegetation.png", width = 800, height = 600)
ordiplot(nmds.veg, type = "none", choices = c(1,2))
colvec <- c("darkturquoise", "darkblue")
ordihull(nmds.veg,groups=group_old,draw="polygon",col= colvec, label=F)
legend("topright", legend=levels(group_old), bty="n", col=colvec, pch=19)
plot(ef, col="black", seg.lty = "dashed")
dev.off()
